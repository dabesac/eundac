<?phpclass Syllabus_FollowupController extends Zend_Controller_Action {    public function init()    {      $sesion  = Zend_Auth::getInstance();      if(!$sesion->hasIdentity() ){        $this->_helper->redirector('index',"index",'default');      }      $login = $sesion->getStorage()->read();      if (!$login->rol['module']=="docente"){        $this->_helper->redirector('index','index','default');      }      $this->sesion = $login;       }        public function indexAction(){      //dataBases      $facultyDb = new Api_Model_DbTable_Faculty();      $eid = $this->sesion->eid;      $oid = $this->sesion->oid;      //Preparar select para facultad      $where = array('eid'   => $eid,                     'oid'   => $oid,                     'state' => 'A' );      $preDataFaculties = $facultyDb->_getFilter($where);      foreach ($preDataFaculties as $c => $faculty) {         if ($faculty['facid'] != 'TODO') {            $dataFaculties[$c]['facid'] = $faculty['facid'];            $dataFaculties[$c]['name'] = $faculty['name'];         }      }      $this->view->dataFaculties = $dataFaculties;    }   public function listdocentesAction(){      $this->_helper->layout()->disableLayout();      //DataBases      $personDb                  = new Api_Model_DbTable_Person();      $syllabusDb                = new Api_Model_DbTable_Syllabus();      $syllabusUnitsDb           = new Api_Model_DbTable_Syllabusunits();      $syllabusUnitsContentDb    = new Api_Model_DbTable_Syllabusunitcontent();      $syllabusControlActivityDb = new Api_Model_DbTable_ControlActivity();      $courseDb                  = new Api_Model_DbTable_Course();      $coursesTeacherDb          = new Api_Model_DbTable_Coursexteacher();      $eid   = $this->sesion->eid;      $oid   = $this->sesion->oid;      $perid = $this->sesion->period->perid;      $datasearch = base64_decode($this->_getParam('datasearch'));      $datasearch = explode('-', $datasearch);      $escid = $datasearch[0];      $subid = $datasearch[1];      $where = array('eid'     => $eid,                     'oid'     => $oid,                     'escid'   => $escid,                     'subid'   => $subid,                     'perid'   => $perid,                     'is_main' => 'S' );      $attrib = array('uid', 'pid', 'courseid', 'curid');      $order = array('pid ASC');      $preDataTeachers = $coursesTeacherDb->_getFilter($where, $attrib, $order);      $pidExist  = '';      $cTeachers = 0;      $cCursos   = 0;      foreach ($preDataTeachers as $teacher) {         //Cantidad de docentes asignados         if ($teacher['pid'] != $pidExist) {            $cCursos  = 0;            $pidExist = $teacher['pid'];            //Nombre del Docente            $where = array('eid' => $eid,                           'pid' => $teacher['pid'] );            $attrib = array('last_name0', 'last_name1', 'first_name');            $teacherName = $personDb->_getFilter($where, $attrib);            $dataTeacher[$cTeachers]['pid']      = $teacher['pid'];            $dataTeacher[$cTeachers]['uid']      = $teacher['uid'];            $dataTeacher[$cTeachers]['fullName'] = $teacherName[0]['last_name0'].' '.$teacherName[0]['last_name1'].' '.$teacherName[0]['first_name'];            $cTeachers++;         }      }      foreach ($dataTeacher as $c => $teacher) {         $where = array('eid'     => $eid,                        'oid'     => $oid,                        'pid'     => $teacher['pid'],                        'uid'     => $teacher['uid'],                        'escid'   => $escid,                        'subid'   => $subid,                        'perid'   => $perid,                        'is_main' => 'S' );         $preDataCourses = $coursesTeacherDb->_getFilter($where);         foreach ($preDataCourses as $cCourses => $course) {            //Nombre de Curso            $where = array('eid'      => $eid,                           'oid'      => $oid,                           'courseid' => $course['courseid'],                           'curid'    => $course['curid'] );            $attrib = array('name');            $nameCourse = $courseDb->_getFilter($where, $attrib);            $dataTeacher[$c]['courses'][$cCourses] = array( 'courseid' => $course['courseid'],                                                            'curid'    => $course['curid'],                                                            'name'     => $nameCourse[0]['name'],                                                            'turno'    => $course['turno'] );            //Verificar si lleno el silabo            $where = array('eid'      => $eid,                           'oid'      => $oid,                           'courseid' => $course['courseid'],                           'curid'    => $course['curid'],                           'turno'    => $course['turno'],                           'escid'    => $course['escid'],                           'subid'    => $course['subid'],                           'perid'    => $perid );            $attrib = array('state');            $dataSilabo = $syllabusDb->_getFilter($where, $attrib);            if ($dataSilabo and $dataSilabo[0]['state'] == 'C') {               $dataTeacher[$c]['courses'][$cCourses]['llenoSilabo'] = 'yes';               //cantidad de Unidades y Sesiones               $syllabusUnits = $syllabusUnitsDb->_getFilter($where);               foreach ($syllabusUnits as $cUnits => $unit) {                  $where = array('eid'      => $eid,                                 'oid'      => $oid,                                 'courseid' => $course['courseid'],                                 'curid'    => $course['curid'],                                 'turno'    => $course['turno'],                                 'escid'    => $course['escid'],                                 'subid'    => $course['subid'],                                 'perid'    => $perid,                                 'unit'     => $unit['unit'] );                  $unitsSessiones = $syllabusUnitsContentDb->_getFilter($where);                  $cantUnitSessiones = count($unitsSessiones);                  $dataTeacher[$c]['courses'][$cCourses]['units'][$cUnits] = array( 'unit'         => $unit['unit'],                                                                                    'name'         => $unit['name'],                                                                                    'cantSesiones' => $cantUnitSessiones );               }               $where = array('eid'      => $eid,                              'oid'      => $oid,                              'courseid' => $course['courseid'],                              'curid'    => $course['curid'],                              'turno'    => $course['turno'],                              'escid'    => $course['escid'],                              'subid'    => $course['subid'],                              'perid'    => $perid,                              'state'    => 'D' );               $dataActivity = $syllabusControlActivityDb->_getUltimateclass($where);               if ($dataActivity[0]['unit'] and $dataActivity[0]['session']) {                  $dataTeacher[$c]['courses'][$cCourses]['currentUnit']    = $dataActivity[0]['unit'];                  $dataTeacher[$c]['courses'][$cCourses]['currentSession'] = $dataActivity[0]['session'];               }else{                  $dataTeacher[$c]['courses'][$cCourses]['currentUnit']    = 0;                  $dataTeacher[$c]['courses'][$cCourses]['currentSession'] = 0;               }            }else{               $dataTeacher[$c]['courses'][$cCourses]['llenoSilabo'] = 'no';            }         }         $dataTeacher[$c]['cantCourses'] = $cCourses + 1;      }      $this->view->dataTeacher = $dataTeacher;   }}      